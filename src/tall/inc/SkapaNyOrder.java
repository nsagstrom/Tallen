/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tall.inc;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gewe_
 */
public class SkapaNyOrder extends javax.swing.JFrame {

    private Color farg;
    /**
     * Creates new form SkapaNyOrder
     */
    public SkapaNyOrder() {
        initComponents();
        skapaOrderNummer();
     //   fillFargCmb();
        fillTygCmb();
        fillStandardHattCmb();
        fillDekList();
        fillGenreCmb();

        visaFarg(Color.WHITE);
        
        DefaultTableModel model = (DefaultTableModel) hattTbl.getModel();
        for (int i = hattTbl.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        tullTextbox.setVisible(false);
        tullLabel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNyOrder = new javax.swing.JLabel();
        lblAntal = new javax.swing.JLabel();
        lblArtikelnummer = new javax.swing.JLabel();
        lblEfternamn = new javax.swing.JLabel();
        lblKundinfo = new javax.swing.JLabel();
        lblFornamn = new javax.swing.JLabel();
        lblAdress = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        txtangivetFornamn = new javax.swing.JTextField();
        txtangivetEfternamn = new javax.swing.JTextField();
        txtangivetAdress = new javax.swing.JTextField();
        txtangivetTelefonnummer = new javax.swing.JTextField();
        lblOrdernummer = new javax.swing.JLabel();
        lblVarOrderNummer = new javax.swing.JLabel();
        lblLagerartikel = new javax.swing.JLabel();
        lblSpecialartikel = new javax.swing.JLabel();
        standardHattCmb = new javax.swing.JComboBox<>();
        lblSpecialartikelFarg = new javax.swing.JLabel();
        lblSpecialartikelTyg = new javax.swing.JLabel();
        txtSpecialBenamning = new javax.swing.JTextField();
        btnLaggTillHatt = new javax.swing.JButton();
        btnLaggTillSpHatt = new javax.swing.JButton();
        btnLaggTillKund = new javax.swing.JButton();
        btnTillbaka = new javax.swing.JButton();
        genreCmb = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tygCmb = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        dekList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        hattTbl = new javax.swing.JTable();
        orderBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        tullCheckbox = new javax.swing.JCheckBox();
        tullTextbox = new javax.swing.JTextField();
        tullLabel = new javax.swing.JLabel();
        btnValjFarg = new javax.swing.JButton();
        lblFarg = new javax.swing.JLabel();
        pnlColorSample = new javax.swing.JPanel();
        txtStorlek = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblNyOrder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNyOrder.setText("Ny order");

        lblAntal.setText("Antal");

        lblArtikelnummer.setText("Artikelnummer");

        lblEfternamn.setText("Efternamn");

        lblKundinfo.setText("Ny kund");

        lblFornamn.setText("Förnamn");

        lblAdress.setText("Adress");

        lblTelefon.setText("Telefonnummer");

        lblOrdernummer.setText("Ordernummer");

        lblVarOrderNummer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblVarOrderNummer.setText("\"ordernr\"");

        lblLagerartikel.setText("Lagerartikel");

        lblSpecialartikel.setText("Specialartikel");

        lblSpecialartikelFarg.setText("Färg");

        lblSpecialartikelTyg.setText("Tyg");

        btnLaggTillHatt.setText("Lägg till i order");
        btnLaggTillHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaggTillHattActionPerformed(evt);
            }
        });

        btnLaggTillSpHatt.setText("Lägg till i order");
        btnLaggTillSpHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaggTillSpHattActionPerformed(evt);
            }
        });

        btnLaggTillKund.setText("Lägg till");
        btnLaggTillKund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaggTillKundActionPerformed(evt);
            }
        });

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        jLabel1.setText("Benämning:");

        jLabel2.setText("Genre:");

        dekList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(dekList);

        jLabel3.setText("Dekorationer:");

        jLabel4.setText("Storlek:");

        hattTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        hattTbl.setDropMode(javax.swing.DropMode.INSERT);
        jScrollPane2.setViewportView(hattTbl);

        orderBtn.setText("Skapa Order");
        orderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Order:");

        jCheckBox1.setText("Snabbleverans?");

        tullCheckbox.setText("Skickas utomlands?");
        tullCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tullCheckboxActionPerformed(evt);
            }
        });

        tullLabel.setText("Tull:");

        btnValjFarg.setText("Välj färg");
        btnValjFarg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValjFargActionPerformed(evt);
            }
        });

        lblFarg.setText("jLabel6");

        javax.swing.GroupLayout pnlColorSampleLayout = new javax.swing.GroupLayout(pnlColorSample);
        pnlColorSample.setLayout(pnlColorSampleLayout);
        pnlColorSampleLayout.setHorizontalGroup(
            pnlColorSampleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        pnlColorSampleLayout.setVerticalGroup(
            pnlColorSampleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        txtStorlek.setText("40");
        txtStorlek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStorlekActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblKundinfo)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(lblNyOrder)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOrdernummer)
                            .addComponent(lblVarOrderNummer))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblArtikelnummer)
                                    .addComponent(standardHattCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnValjFarg)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pnlColorSample, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblFarg)
                                        .addGap(36, 36, 36)
                                        .addComponent(txtSpecialBenamning, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAntal)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(78, 78, 78)
                                        .addComponent(btnLaggTillHatt))))
                            .addComponent(lblLagerartikel)
                            .addComponent(lblSpecialartikel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSpecialartikelFarg, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tullTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tullLabel)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(tullCheckbox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(116, 116, 116)
                                                .addComponent(lblSpecialartikelTyg, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(txtStorlek, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(93, 93, 93)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel2)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(genreCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(tygCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(118, 118, 118)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(5, 5, 5))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtangivetFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblFornamn))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtangivetEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEfternamn))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtangivetAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAdress))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtangivetTelefonnummer, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(btnLaggTillKund))
                                    .addComponent(lblTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnLaggTillSpHatt)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 5, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnTillbaka)
                                        .addGap(433, 433, 433))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(orderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(303, 303, 303))))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNyOrder)
                    .addComponent(lblOrdernummer))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblKundinfo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblVarOrderNummer))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFornamn)
                    .addComponent(lblAdress)
                    .addComponent(lblEfternamn)
                    .addComponent(lblTelefon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtangivetFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtangivetEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtangivetAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtangivetTelefonnummer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLaggTillKund))
                .addGap(33, 33, 33)
                .addComponent(lblLagerartikel)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAntal)
                    .addComponent(lblArtikelnummer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(standardHattCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLaggTillHatt))
                .addGap(27, 27, 27)
                .addComponent(lblSpecialartikel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSpecialartikelTyg)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSpecialartikelFarg)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLaggTillSpHatt)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSpecialBenamning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(genreCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tygCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtStorlek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pnlColorSample, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblFarg, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnValjFarg))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addGap(18, 18, 18)
                                .addComponent(tullCheckbox)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(orderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tullLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tullTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(47, 47, 47)
                        .addComponent(btnTillbaka))
                    .addComponent(jLabel5))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLaggTillKundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaggTillKundActionPerformed
        if (valideringMetod() == false) {
            laggTillNyKund();
        }
    }//GEN-LAST:event_btnLaggTillKundActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void btnLaggTillSpHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaggTillSpHattActionPerformed
        laggTillSpecial();

    }//GEN-LAST:event_btnLaggTillSpHattActionPerformed

    private void btnLaggTillHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaggTillHattActionPerformed
        Object hatt = standardHattCmb.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) hattTbl.getModel();
        model.addRow(new Object[]{hatt});
    }//GEN-LAST:event_btnLaggTillHattActionPerformed

    private void orderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) hattTbl.getModel();
        ArrayList<String> hattar = new ArrayList<String>();

        for (int count = 0; count < model.getRowCount(); count++) {
            hattar.add(model.getValueAt(count, 0).toString());
        }
        String besID = SqlFragor.nyID("bestallning", "BestID");
        int kundID = taFramMaxKundId();
        String tullID = tullTextbox.getText();
        boolean prio = tullCheckbox.isSelected();
        int prioValue = 0;
        if(prio = true){
            prioValue = 1;
        }
        String insertBestallningQuery = "INSERT INTO bestallning (BestID, KundID, Status, TullID, Prio) VALUES ('"+besID+"', '"+kundID+"', 'Öppen', '"+tullID+"', '"+prioValue+"' )";
        SqlFragor.addToDatabasen(insertBestallningQuery);

        for (String hatt : hattar) {
            String hattIdQuery = "SELECT hattID from hatt where Beskrivning = '" + hatt + "'";
            String hattID = SqlFragor.getEttVarde(hattIdQuery);
            String orderradID = SqlFragor.nyID("orderrad", "RadID");
            String orderradQuery = "INSERT INTO orderrad (RadID, HattID, BestID) VALUES ('" + orderradID + "', '" + hattID + "', '"+besID+"')";
            System.out.println(hattID + orderradID);
            SqlFragor.addToDatabasen(orderradQuery);
        }


    }//GEN-LAST:event_orderBtnActionPerformed

    private void tullCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tullCheckboxActionPerformed
        // TODO add your handling code here:
        tullTextbox.setVisible(tullCheckbox.isSelected());
        tullLabel.setVisible(tullCheckbox.isSelected());


    }//GEN-LAST:event_tullCheckboxActionPerformed

    private void btnValjFargActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValjFargActionPerformed
        
        valjFarg();
    }//GEN-LAST:event_btnValjFargActionPerformed

    private void txtStorlekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStorlekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStorlekActionPerformed

    //Färgmetoder---------------------------------------------------------
    private void valjFarg(){
        farg = JColorChooser.showDialog(this, "Välj färg", Color.BLACK);
        if(farg == null){
            farg = Color.WHITE;
        }
        visaFarg(farg);
    }
    
    private void visaFarg(Color farg){
        pnlColorSample.setBackground(farg);
        lblFarg.setText(colorToHex(farg));
    }
    
    private String colorToHex(Color farg){
        String hex;
        hex = Integer.toHexString(farg.getRGB()).substring(2);
        return hex;
    }
    //Slut på färgmetoder-----------------------------------------------------
    
    private void laggTillNyKund() {
        String fornamn = txtangivetFornamn.getText();
        String efternamn = txtangivetEfternamn.getText();
        String adress = txtangivetAdress.getText();
        String telefonnummer = txtangivetTelefonnummer.getText();
        int kNr = skapaKundnummer();

        String fraga = "INSERT INTO kund (KundID, Fornamn, Efternamn, Adress, Tel) VALUES ('" + kNr + "', '" + fornamn + "', '" + efternamn + "', '" + adress + "', '" + telefonnummer + "');";
        SqlFragor.addToDatabasen(fraga);

        JOptionPane.showMessageDialog(null, "Ny kund tillagd!");
    }

    private void laggTillSpecial() {
        String hattID = SqlFragor.nyID("hatt", "HattID");
        String benamning = txtSpecialBenamning.getText();
        
        /*String farg = CBoxSpecialartikelFarg.getSelectedItem().toString();
        String fargQuery = "Select fargID From farg where farg = '" + farg + "'";

        String fargID = SqlFragor.getEttVarde(fargQuery);*/
        //
        String genre = genreCmb.getSelectedItem().toString();
        String genreQuery = "Select genreID From genre where genre = '" + genre + "'";
        String genreID = SqlFragor.getEttVarde(genreQuery);
        //
        String tyg = tygCmb.getSelectedItem().toString();
        String tygQuery = "Select tygID From tyg where tyg = '" + tyg + "'";
        String tygID = SqlFragor.getEttVarde(tygQuery);
        //
        //String storlek = storlekCmb.getSelectedItem().toString();
        String storlek = txtStorlek.getText();
        String anvandare = Inloggningssida.getAnvandarID();

        String fragaSpecial = "INSERT INTO SpecialHatt(HattID) VALUES (" + hattID + ");";
        SqlFragor.addToDatabasen(fragaSpecial);

        String fraga = "INSERT INTO hatt (HattID, Beskrivning, Farg,pris, storlek, GenreID, TygID, AnvandarID) VALUES (" + hattID + ",'" + benamning + "'," + farg + ",0,'" + storlek + "'," + genreID + "," + tygID + "," + anvandare + ")";
        SqlFragor.addToDatabasen(fraga);

        List<String> dek = dekList.getSelectedValuesList();
        for (String dekoration : dek) {
            String dekQuery = "SELECT dekorationID FROM dekorationer WHERE dekoration = '" + dekoration + "'";
            String dekID = SqlFragor.getEttVarde(dekQuery);
            String insertQuery = "INSERT INTO dekorationerstandardhatt (hattID,dekorationID) VALUES ('" + hattID + "','" + dekID + "')";

            SqlFragor.addToDatabasen(insertQuery);

        }

        String addToTableQuery = "SELECT Beskrivning FROM hatt where hattID = '" + hattID + "'";
        Object hattIDTbl = SqlFragor.getEttVarde(addToTableQuery);
        DefaultTableModel model = (DefaultTableModel) hattTbl.getModel();
        model.addRow(new Object[]{hattIDTbl});
        /*String query = "SELECT HattID FROM specialhatt";
        ArrayList<String> hattIdLista = SqlFragor.getEnKolumn(query);
        for (String hatt : hattIdLista) {
            String beskrivningQuery = "SELECT beskrivning from Hatt inner join StandardHatt SH on Hatt.HattID = SH.HattID where SH.HattID = '" + hatt + "'";
            String hattBes = SqlFragor.getEttVarde(beskrivningQuery);
            standardHattCmb.addItem(hattBes);
        }
         */
        JOptionPane.showMessageDialog(null, "Ny specialhatt!");

    }

    private boolean valideringMetod() {
        boolean ok = false;
        if (ValideringsKlass.stringHarVarde(txtangivetFornamn.getText()) == false) {
            ok = true;
            JOptionPane.showMessageDialog(null, "Vänligen ange förnamn i rutan");
        }

        if (ValideringsKlass.stringHarVarde(txtangivetEfternamn.getText()) == false) {
            ok = true;
            JOptionPane.showMessageDialog(null, "Vänligen ange efternamn i rutan");
        }
        if (ValideringsKlass.stringHarVarde(txtangivetAdress.getText()) == false) {
            ok = true;
            JOptionPane.showMessageDialog(null, "Vänligen ange adress i rutan");
        }
        if (ValideringsKlass.stringHarVarde(txtangivetTelefonnummer.getText()) == false) {
            ok = true;
            JOptionPane.showMessageDialog(null, "Vänligen ange telefonnummer i rutan");
        }
        if (ValideringsKlass.testaTeleNmrString(txtangivetTelefonnummer.getText()) == false) {
            ok = true;
            JOptionPane.showMessageDialog(null, "Telefonnummer kan inte innehålla bokstäver");
        }

        return ok;
    }

    public String getNuvarandeOrderNummer() {
        String nuvarandeOrderNummer = lblVarOrderNummer.getText();

        return nuvarandeOrderNummer;
    }

    /*public void fillFargCmb() {
        String query = "SELECT farg FROM farg";
        ArrayList<String> fargLista = SqlFragor.getEnKolumn(query);
        for (String farg : fargLista) {
            CBoxSpecialartikelFarg.addItem(farg);
        }
    }*/

    public void fillDekList() {

        dekList.setSelectionModel(new DefaultListSelectionModel() {
            public void setSelectionInterval(int index0, int index1) {
                if (isSelectedIndex(index0)) {
                    super.removeSelectionInterval(index0, index1);
                } else {
                    super.addSelectionInterval(index0, index1);
                }
            }
        });
        String query = "SELECT Dekoration FROM dekorationer";
        ArrayList<String> dekLista = SqlFragor.getEnKolumn(query);
        DefaultListModel model = new DefaultListModel();
        for (String dek : dekLista) {
            model.addElement(dek);

            dekList.setModel(model);
        }

    }

    public void fillStandardHattCmb() {

        String query = "SELECT HattID FROM standardhatt";
        ArrayList<String> hattIdLista = SqlFragor.getEnKolumn(query);
        for (String hatt : hattIdLista) {
            String beskrivningQuery = "SELECT beskrivning from Hatt inner join StandardHatt SH on Hatt.HattID = SH.HattID where SH.HattID = '" + hatt + "'";
            String hattBes = SqlFragor.getEttVarde(beskrivningQuery);
            standardHattCmb.addItem(hattBes);
        }
    }

    public void fillGenreCmb() {
        String query = "SELECT Genre FROM genre";
        ArrayList<String> genreLista = SqlFragor.getEnKolumn(query);
        for (String genre : genreLista) {
            genreCmb.addItem(genre);

        }
    }

    public void fillTygCmb() {
        String query = "SELECT tyg FROM tyg";
        ArrayList<String> tygLista = SqlFragor.getEnKolumn(query);
        for (String tyg : tygLista) {
            tygCmb.addItem(tyg);
        }
    }

    //Skapar "nästa" ordernummer (BestID) baserat på det högsta ID:t som finns i databasen.
    private void skapaOrderNummer() {
        int ordernummer = taFramMaxBestId() + 1;
        String order = Integer.toString(ordernummer);
        lblVarOrderNummer.setText(order);
    }

    //Skapar "nästa" KundID baserat på det högsta ID:t som finns i databasen.
    private int skapaKundnummer() {
        int kundNummer = taFramMaxKundId() + 1;
        String kundNr = Integer.toString(kundNummer);

        return kundNummer;
    }

    //Skapar "nästa" HattID baserat på det högsta värdet som finns i databasen.
    private int skapaHattId() {
        int hattId = taFramMaxHattId() + 1;
        String kundNr = Integer.toString(hattId);

        return hattId;
    }
    // Hämtar det högsta HattID:t som finns i databasen

    public int taFramMaxHattId() {
        int maxId = Integer.parseInt(SqlFragor.getEttVarde("SELECT MAX(HattID) FROM hatt"));
        return maxId;
    }

    //Hämtar och returnerar högsta BestID som finns i databasen
    public int taFramMaxBestId() {
        int maxId = Integer.parseInt(SqlFragor.getEttVarde("SELECT MAX(BestID) FROM Bestallning"));
        return maxId;
    }

    //Hämtar och returnerar högsta KundID som finns i databasen
    public int taFramMaxKundId() {
        int maxId = Integer.parseInt(SqlFragor.getEttVarde("SELECT MAX(KundID) FROM Kund"));
        return maxId;
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLaggTillHatt;
    private javax.swing.JButton btnLaggTillKund;
    private javax.swing.JButton btnLaggTillSpHatt;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JButton btnValjFarg;
    private javax.swing.JList<String> dekList;
    private javax.swing.JComboBox<String> genreCmb;
    private javax.swing.JTable hattTbl;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel lblAdress;
    private javax.swing.JLabel lblAntal;
    private javax.swing.JLabel lblArtikelnummer;
    private javax.swing.JLabel lblEfternamn;
    private javax.swing.JLabel lblFarg;
    private javax.swing.JLabel lblFornamn;
    private javax.swing.JLabel lblKundinfo;
    private javax.swing.JLabel lblLagerartikel;
    private javax.swing.JLabel lblNyOrder;
    private javax.swing.JLabel lblOrdernummer;
    private javax.swing.JLabel lblSpecialartikel;
    private javax.swing.JLabel lblSpecialartikelFarg;
    private javax.swing.JLabel lblSpecialartikelTyg;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblVarOrderNummer;
    private javax.swing.JButton orderBtn;
    private javax.swing.JPanel pnlColorSample;
    private javax.swing.JComboBox<String> standardHattCmb;
    private javax.swing.JCheckBox tullCheckbox;
    private javax.swing.JLabel tullLabel;
    private javax.swing.JTextField tullTextbox;
    private javax.swing.JTextField txtSpecialBenamning;
    private javax.swing.JTextField txtStorlek;
    private javax.swing.JTextField txtangivetAdress;
    private javax.swing.JTextField txtangivetEfternamn;
    private javax.swing.JTextField txtangivetFornamn;
    private javax.swing.JTextField txtangivetTelefonnummer;
    private javax.swing.JComboBox<String> tygCmb;
    // End of variables declaration//GEN-END:variables
}
