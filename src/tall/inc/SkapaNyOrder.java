/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tall.inc;

import java.awt.Color;
import java.awt.Image;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author gewe_
 */
public class SkapaNyOrder extends javax.swing.JFrame {

    private Color farg;
    private int kundID = -1;
    /**
     * Creates new form SkapaNyOrder
     */
    public SkapaNyOrder() {
        initComponents();
        skapaOrderNummer();
        //   fillFargCmb();
        fillTygCmb();
        fillStandardHattCmb();
        fillDekList();
        fillGenreCmb();
        fillNamn();
        kundCheckShow();
        DefaultTableModel mode2 = (DefaultTableModel) kundTbl.getModel();
        for (int i = kundTbl.getRowCount() - 1; i >= 0; i--) {
            mode2.removeRow(i);
        }
        

        visaFarg(Color.WHITE);

        DefaultTableModel model = (DefaultTableModel) hattTbl.getModel();
        for (int i = hattTbl.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        tullTextbox.setVisible(false);
        tullLabel.setVisible(false);
        lblFornamn.setVisible(false);
        lblEfternamn.setVisible(false);
        lblAdress.setVisible(false);
        lblTelefon.setVisible(false);
        txtangivetFornamn.setVisible(false);
        txtangivetEfternamn.setVisible(false);
        txtangivetAdress.setVisible(false);
        txtangivetTelefonnummer.setVisible(false);
        btnLaggTillKund.setVisible(false);

        AutoCompleteDecorator.decorate(standardHattCmb);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNyOrder = new javax.swing.JLabel();
        lblArtikelnummer = new javax.swing.JLabel();
        lblEfternamn = new javax.swing.JLabel();
        lblFornamn = new javax.swing.JLabel();
        lblAdress = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        txtangivetFornamn = new javax.swing.JTextField();
        txtangivetEfternamn = new javax.swing.JTextField();
        txtangivetAdress = new javax.swing.JTextField();
        txtangivetTelefonnummer = new javax.swing.JTextField();
        lblOrdernummer = new javax.swing.JLabel();
        lblVarOrderNummer = new javax.swing.JLabel();
        lblLagerartikel = new javax.swing.JLabel();
        lblSpecialartikel = new javax.swing.JLabel();
        standardHattCmb = new javax.swing.JComboBox<>();
        lblSpecialartikelFarg = new javax.swing.JLabel();
        lblSpecialartikelTyg = new javax.swing.JLabel();
        txtSpecialBenamning = new javax.swing.JTextField();
        btnLaggTillHatt = new javax.swing.JButton();
        btnLaggTillSpHatt = new javax.swing.JButton();
        btnLaggTillKund = new javax.swing.JButton();
        btnTillbaka = new javax.swing.JButton();
        genreCmb = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tygCmb = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        dekList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        hattTbl = new javax.swing.JTable();
        orderBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        tullCheckbox = new javax.swing.JCheckBox();
        tullTextbox = new javax.swing.JTextField();
        tullLabel = new javax.swing.JLabel();
        btnValjFarg = new javax.swing.JButton();
        lblFarg = new javax.swing.JLabel();
        pnlColorSample = new javax.swing.JPanel();
        txtStorlek = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lBild = new javax.swing.JLabel();
        cmbValjKund = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        kundTbl = new javax.swing.JTable();
        kundCheckbox = new javax.swing.JCheckBox();
        lblNyKund = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblNyOrder.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNyOrder.setText("Skapa ny order");

        lblArtikelnummer.setText("Hatt");

        lblEfternamn.setText("Efternamn");

        lblFornamn.setText("Förnamn");

        lblAdress.setText("Adress");

        lblTelefon.setText("Telefonnummer");

        lblOrdernummer.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblOrdernummer.setText("Ordernummer");

        lblVarOrderNummer.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblVarOrderNummer.setText("\"ordernr\"");

        lblLagerartikel.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblLagerartikel.setText("Lagerartikel");

        lblSpecialartikel.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblSpecialartikel.setText("Specialartikel");

        standardHattCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standardHattCmbActionPerformed(evt);
            }
        });

        lblSpecialartikelFarg.setText("Färg");

        lblSpecialartikelTyg.setText("Tyg");

        btnLaggTillHatt.setText("Lägg till i order");
        btnLaggTillHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaggTillHattActionPerformed(evt);
            }
        });

        btnLaggTillSpHatt.setText("Lägg till i order");
        btnLaggTillSpHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaggTillSpHattActionPerformed(evt);
            }
        });

        btnLaggTillKund.setText("Lägg till ny kund");
        btnLaggTillKund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaggTillKundActionPerformed(evt);
            }
        });

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        genreCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genreCmbActionPerformed(evt);
            }
        });

        jLabel1.setText("Benämning:");

        jLabel2.setText("Genre:");

        tygCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tygCmbActionPerformed(evt);
            }
        });
        tygCmb.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tygCmbPropertyChange(evt);
            }
        });

        dekList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(dekList);

        jLabel3.setText("Dekorationer:");

        jLabel4.setText("Storlek:");

        hattTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        hattTbl.setDropMode(javax.swing.DropMode.INSERT);
        jScrollPane2.setViewportView(hattTbl);

        orderBtn.setText("Skapa Order");
        orderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Order:");

        jCheckBox1.setText("Snabbleverans?");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        tullCheckbox.setText("Skickas utomlands?");
        tullCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tullCheckboxActionPerformed(evt);
            }
        });

        tullLabel.setText("Tull:");

        btnValjFarg.setText("Välj färg");
        btnValjFarg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValjFargActionPerformed(evt);
            }
        });

        lblFarg.setText("jLabel6");

        javax.swing.GroupLayout pnlColorSampleLayout = new javax.swing.GroupLayout(pnlColorSample);
        pnlColorSample.setLayout(pnlColorSampleLayout);
        pnlColorSampleLayout.setHorizontalGroup(
            pnlColorSampleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        pnlColorSampleLayout.setVerticalGroup(
            pnlColorSampleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        txtStorlek.setText("40");
        txtStorlek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStorlekActionPerformed(evt);
            }
        });

        jButton1.setText("Ny dekoration");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cmbValjKund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbValjKundActionPerformed(evt);
            }
        });

        kundTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Förnamn", "Eftenamn", "Adress", "Telefonnummer"
            }
        ));
        jScrollPane3.setViewportView(kundTbl);

        kundCheckbox.setSelected(true);
        kundCheckbox.setText("Befintlig kund");
        kundCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kundCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFornamn)
                                        .addGap(28, 28, 28)
                                        .addComponent(lblEfternamn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtangivetFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtangivetEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAdress)
                                    .addComponent(txtangivetAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtangivetTelefonnummer, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblLagerartikel)
                                    .addComponent(lblSpecialartikel)
                                    .addComponent(lblArtikelnummer)
                                    .addComponent(standardHattCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addComponent(lBild, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(btnLaggTillHatt))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblOrdernummer)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblVarOrderNummer))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(kundCheckbox)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbValjKund, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tullCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tullTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tullLabel)
                                    .addComponent(orderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNyOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblSpecialartikelFarg, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel1)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(93, 93, 93)
                                                        .addComponent(jLabel2))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(189, 189, 189)
                                                .addComponent(genreCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(205, 205, 205)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jButton1)))
                                    .addComponent(btnValjFarg)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pnlColorSample, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblFarg)
                                        .addGap(36, 36, 36)
                                        .addComponent(txtSpecialBenamning, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(495, 495, 495)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnTillbaka)
                                            .addComponent(btnLaggTillSpHatt))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(325, 325, 325)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(tygCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtStorlek, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblSpecialartikelTyg, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(56, 56, 56)
                                            .addComponent(jLabel4)))
                                    .addGap(69, 69, 69)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(414, 414, 414)
                                .addComponent(btnLaggTillKund)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNyKund, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(94, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(lblNyOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblVarOrderNummer)
                            .addComponent(lblOrdernummer))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kundCheckbox)
                            .addComponent(cmbValjKund, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAdress)
                    .addComponent(lblEfternamn)
                    .addComponent(lblFornamn)
                    .addComponent(lblTelefon))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtangivetAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtangivetTelefonnummer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtangivetEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNyKund, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtangivetFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLaggTillKund))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lBild, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLagerartikel)
                                .addGap(10, 10, 10)
                                .addComponent(lblArtikelnummer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(standardHattCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(lblSpecialartikel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSpecialartikelFarg)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(lblSpecialartikelTyg)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtSpecialBenamning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(genreCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tygCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtStorlek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(pnlColorSample, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblFarg, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addComponent(btnLaggTillSpHatt))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnValjFarg))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addGap(18, 18, 18)
                                .addComponent(tullCheckbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tullLabel)
                                .addGap(9, 9, 9)
                                .addComponent(tullTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(orderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTillbaka)))
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btnLaggTillHatt)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLaggTillKundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaggTillKundActionPerformed
        if (valideringMetod() == false) {
            laggTillNyKund();
        }
    }//GEN-LAST:event_btnLaggTillKundActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        new Startsida().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void btnLaggTillSpHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaggTillSpHattActionPerformed
        laggTillSpecial();

    }//GEN-LAST:event_btnLaggTillSpHattActionPerformed

    private void btnLaggTillHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaggTillHattActionPerformed
        Object hatt = standardHattCmb.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) hattTbl.getModel();
        model.addRow(new Object[]{hatt});
    }//GEN-LAST:event_btnLaggTillHattActionPerformed

    private int hittaID(){
        int nyttID = kundID;
        
        if(kundID<0){
            //kod för befintlig kund
        }
        
        return nyttID;
    }
    
    private String date(){
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        //LocalDateTime now = LocalDateTime.now();
        Date date = new Date();
        String datum = dateFormat.format(date);
        return datum;
    }
    
    private void orderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) hattTbl.getModel();
        ArrayList<String> hattar = new ArrayList<String>();

        for (int count = 0; count < model.getRowCount(); count++) {
            hattar.add(model.getValueAt(count, 0).toString());
        }
        String besID = SqlFragor.nyID("bestallning", "BestID");
        //int kundID = taFramMaxKundId(); funkar bara med nya kunder
       // kundID = hittaID();
        String tullID = tullTextbox.getText();
        boolean prio = tullCheckbox.isSelected();
        int prioValue = 0;
        
        if (prio = true) {
            prioValue = 1;
        }
        String datum = date();
        String insertBestallningQuery = "INSERT INTO bestallning (BestID, KundID, Status, TullID, Prio, BestDatum) VALUES ('" + besID + "', '" + kundID + "', 'Öppen', '" + tullID + "', '" + prioValue + "','" + datum + "')";
        SqlFragor.addToDatabasen(insertBestallningQuery);

        for (String hatt : hattar) {
            String hattIdQuery = "SELECT hattID from hatt where Beskrivning = '" + hatt + "'";
            String hattID = SqlFragor.getEttVarde(hattIdQuery);
            String orderradID = SqlFragor.nyID("orderrad", "RadID");
            String orderradQuery = "INSERT INTO orderrad (RadID, HattID, BestID) VALUES ('" + orderradID + "', '" + hattID + "', '" + besID + "')";
            System.out.println(hattID + orderradID);
            SqlFragor.addToDatabasen(orderradQuery);
        }
        dispose();
        new Startsida().setVisible(true);


    }//GEN-LAST:event_orderBtnActionPerformed
    private void visaKunder() {

        DefaultTableModel model = (DefaultTableModel) kundTbl.getModel();
        for (int i = kundTbl.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }//String namnet = cmbValjKund.getSelectedItem().toString();
        String forNamnet = cmbValjKund.getSelectedItem().toString();
        int i = forNamnet.indexOf(" ");
        String namnet = forNamnet.substring(0, i);

        String testLista = "select kundid from kund where fornamn = '" + namnet + "'";
        
        
        
        ArrayList<String> lista = SqlFragor.getEnKolumn(testLista);
        System.out.println(lista);
        for (String listan : lista) {
            String queryForNamn = "select fornamn from kund where kundid = '" + listan + "'";
            String forNamn = SqlFragor.getEttVarde(queryForNamn);

            String queryEfterNamn = "select efternamn from kund where kundid = '" + listan + "'";
            String efterNamn = SqlFragor.getEttVarde(queryEfterNamn);

            String queryAdress = "select adress from kund where kundid = '" + listan + "'";
            String adress = SqlFragor.getEttVarde(queryAdress);

            String queryTele = "select tel from kund where kundid = '" + listan + "'";
            String tele = SqlFragor.getEttVarde(queryTele);

            String data[] = {forNamn, efterNamn, adress, tele};
            DefaultTableModel tblModel = (DefaultTableModel) kundTbl.getModel();
            tblModel.addRow(data);
            
            kundID = Integer.parseInt(listan);
        }

    }

    private void tullCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tullCheckboxActionPerformed
        // TODO add your handling code here:
        tullTextbox.setVisible(tullCheckbox.isSelected());
        tullLabel.setVisible(tullCheckbox.isSelected());


    }//GEN-LAST:event_tullCheckboxActionPerformed

    private void btnValjFargActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValjFargActionPerformed

        valjFarg();
    }//GEN-LAST:event_btnValjFargActionPerformed

    private void txtStorlekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStorlekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStorlekActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        skapaDekoration();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void standardHattCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standardHattCmbActionPerformed
        valjBild();
    }//GEN-LAST:event_standardHattCmbActionPerformed

    private void tygCmbPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tygCmbPropertyChange

    }//GEN-LAST:event_tygCmbPropertyChange

    private void tygCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tygCmbActionPerformed
        if (tygCmb.getSelectedIndex() == 1) {
            skapaTyg();
        }
    }//GEN-LAST:event_tygCmbActionPerformed

    private void genreCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genreCmbActionPerformed
        if (genreCmb.getSelectedIndex() == 1) {
            skapaGenre();
        }
    }//GEN-LAST:event_genreCmbActionPerformed

    private void cmbValjKundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbValjKundActionPerformed
        visaKunder();
    }//GEN-LAST:event_cmbValjKundActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void kundCheckShow(){
        
        cmbValjKund.setVisible(true);
        kundTbl.setVisible(true);
        jScrollPane3.setVisible(true);
    }
    
    private void kundCheckBoxCheck(){
        
        
        
        cmbValjKund.setVisible(kundCheckbox.isSelected());
        kundTbl.setVisible(kundCheckbox.isSelected());
        jScrollPane3.setVisible(kundCheckbox.isSelected());
        
        lblFornamn.setVisible(kundCheckbox.isSelected() == false);
        lblEfternamn.setVisible(kundCheckbox.isSelected() == false);
        lblAdress.setVisible(kundCheckbox.isSelected() == false);
        lblTelefon.setVisible(kundCheckbox.isSelected() == false);

        txtangivetFornamn.setVisible(kundCheckbox.isSelected() == false);
        txtangivetEfternamn.setVisible(kundCheckbox.isSelected() == false);
        txtangivetAdress.setVisible(kundCheckbox.isSelected() == false);
        txtangivetTelefonnummer.setVisible(kundCheckbox.isSelected() == false);
        btnLaggTillKund.setVisible(kundCheckbox.isSelected() == false);
        // TODO add your handling code here:
    }
    private void kundCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kundCheckboxActionPerformed
        kundCheckBoxCheck();
    }//GEN-LAST:event_kundCheckboxActionPerformed

    private void skapaDekoration() {
        String nyDekoration = JOptionPane.showInputDialog(null);
        String nyid = SqlFragor.nyID("dekorationer", "DekorationID");
        SqlFragor.addToDatabasen("INSERT INTO dekorationer (DekorationID, Dekoration) VALUES ('" + nyid + "','" + nyDekoration + "')");
        fillDekList();
    }

    private void valjBild() {

        String hatt = "Images/no.png";

        switch (standardHattCmb.getSelectedIndex()) {
            case 0:
                hatt = "Images/shelock.jpg";
                break;
            case 1:
                hatt = "Images/Fez.jpg";
                break;
            case 2:
                hatt = "Images/victoriantophat.jpg";
                break;
            default:
                hatt = "Images/no.png";
                break;
        }

        ImageIcon imageIcon = new ImageIcon(new ImageIcon(hatt).getImage().getScaledInstance(130, 130, Image.SCALE_DEFAULT));
        lBild.setIcon(imageIcon);
    }

    private void skapaTyg() {
        String nyTyg = JOptionPane.showInputDialog(null);
        String nyid = SqlFragor.nyID("tyg", "TygID");
        SqlFragor.addToDatabasen("INSERT INTO tyg (TygID, Tyg) VALUES ('" + nyid + "','" + nyTyg + "')");
        fillTygCmb();
    }

    private void skapaGenre() {
        String nyGenre = JOptionPane.showInputDialog(null);
        String nyid = SqlFragor.nyID("genre", "GenreID");
        SqlFragor.addToDatabasen("INSERT INTO genre (GenreID, Genre) VALUES ('" + nyid + "','" + nyGenre + "')");
        fillGenreCmb();
    }

    //Färgmetoder---------------------------------------------------------
    private void valjFarg() {
        farg = JColorChooser.showDialog(this, "Välj färg", Color.BLACK);
        if (farg == null) {
            farg = Color.WHITE;
        }
        visaFarg(farg);
    }

    private void visaFarg(Color farg) {
        pnlColorSample.setBackground(farg);
        lblFarg.setText(colorToHex(farg));
    }

    private String colorToHex(Color farg) {
        String hex;
        hex = Integer.toHexString(farg.getRGB()).substring(2);
        return hex;
    }
    //Slut på färgmetoder-----------------------------------------------------

    public void fillNamn() {
        /*String query = "SELECT distinct fornamn FROM kund";
        ArrayList<String> namn = SqlFragor.getEnKolumn(query);
        for (String namnen : namn) {
            cmbValjKund.addItem(namnen);
        }*/

        String query = "SELECT distinct fornamn, efternamn FROM kund";
        //ArrayList<String> namn = SqlFragor.getEnKolumn(query);
        ArrayList<HashMap<String, String>> namnlistan = SqlFragor.getFleraRader(query);
        for (HashMap<String, String> namnen : namnlistan) {
            String fornamnet = namnen.get("fornamn");
            String efternamnet = namnen.get("efternamn");
            String namnet = fornamnet + " " + efternamnet;
            cmbValjKund.addItem(namnet);
        }
    }

    private void laggTillNyKund() {
        String fornamn = txtangivetFornamn.getText();
        String efternamn = txtangivetEfternamn.getText();
        String adress = txtangivetAdress.getText();
        String telefonnummer = txtangivetTelefonnummer.getText();
        int kNr = skapaKundnummer();
        kundID = kNr;

        String fraga = "INSERT INTO kund (KundID, Fornamn, Efternamn, Adress, Tel) VALUES ('" + kNr + "', '" + fornamn + "', '" + efternamn + "', '" + adress + "', '" + telefonnummer + "');";
        SqlFragor.addToDatabasen(fraga);

        lblNyKund.setText("Ny kund tillagd!");
    }

    private void laggTillSpecial() {
        String hattID = SqlFragor.nyID("hatt", "HattID");
        String benamning = txtSpecialBenamning.getText();

        /*String farg = CBoxSpecialartikelFarg.getSelectedItem().toString();
        String fargQuery = "Select fargID From farg where farg = '" + farg + "'";

        String fargID = SqlFragor.getEttVarde(fargQuery);*/
        //
        String genre = genreCmb.getSelectedItem().toString();
        String genreQuery = "Select genreID From genre where genre = '" + genre + "'";
        String genreID = SqlFragor.getEttVarde(genreQuery);
        //
        String tyg = tygCmb.getSelectedItem().toString();
        String tygQuery = "Select tygID From tyg where tyg = '" + tyg + "'";
        String tygID = SqlFragor.getEttVarde(tygQuery);
        //
        //String storlek = storlekCmb.getSelectedItem().toString();
        String storlek = txtStorlek.getText();
        String anvandare = Inloggningssida.getAnvandarID();

        String fragaSpecial = "INSERT INTO SpecialHatt(HattID) VALUES (" + hattID + ")";
        SqlFragor.addToDatabasen(fragaSpecial);

        String fraga = "INSERT INTO hatt (HattID, Beskrivning, Farg, pris, storlek, GenreID, TygID, AnvandarID) VALUES (" + hattID + ",'" + benamning + "','" + lblFarg.getText()  + "',0,'" + storlek + "'," + genreID + "," + tygID + "," + anvandare + ")";
        SqlFragor.addToDatabasen(fraga);

        List<String> dek = dekList.getSelectedValuesList();
        for (String dekoration : dek) {
            String dekQuery = "SELECT dekorationID FROM dekorationer WHERE dekoration = '" + dekoration + "'";
            String dekID = SqlFragor.getEttVarde(dekQuery);
            String insertQuery = "INSERT INTO dekorationerstandardhatt (hattID,dekorationID) VALUES ('" + hattID + "','" + dekID + "')";

            SqlFragor.addToDatabasen(insertQuery);

        }

        String addToTableQuery = "SELECT Beskrivning FROM hatt where hattID = '" + hattID + "'";
        Object hattIDTbl = SqlFragor.getEttVarde(addToTableQuery);
        DefaultTableModel model = (DefaultTableModel) hattTbl.getModel();
        model.addRow(new Object[]{hattIDTbl});
        /*String query = "SELECT HattID FROM specialhatt";
        ArrayList<String> hattIdLista = SqlFragor.getEnKolumn(query);
        for (String hatt : hattIdLista) {
            String beskrivningQuery = "SELECT beskrivning from Hatt inner join StandardHatt SH on Hatt.HattID = SH.HattID where SH.HattID = '" + hatt + "'";
            String hattBes = SqlFragor.getEttVarde(beskrivningQuery);
            standardHattCmb.addItem(hattBes);
        }
         */
        JOptionPane.showMessageDialog(null, "Ny specialhatt!");

    }

    private boolean valideringMetod() {
        boolean ok = false;
        if (ValideringsKlass.stringHarVarde(txtangivetFornamn.getText()) == false) {
            ok = true;
            JOptionPane.showMessageDialog(null, "Vänligen ange förnamn i rutan");
        }

        if (ValideringsKlass.stringHarVarde(txtangivetEfternamn.getText()) == false) {
            ok = true;
            JOptionPane.showMessageDialog(null, "Vänligen ange efternamn i rutan");
        }
        if (ValideringsKlass.stringHarVarde(txtangivetAdress.getText()) == false) {
            ok = true;
            JOptionPane.showMessageDialog(null, "Vänligen ange adress i rutan");
        }
        if (ValideringsKlass.stringHarVarde(txtangivetTelefonnummer.getText()) == false) {
            ok = true;
            JOptionPane.showMessageDialog(null, "Vänligen ange telefonnummer i rutan");
        }
        if (ValideringsKlass.testaTeleNmrString(txtangivetTelefonnummer.getText()) == false) {
            ok = true;
            JOptionPane.showMessageDialog(null, "Telefonnummer kan inte innehålla bokstäver");
        }

        return ok;
    }

    public String getNuvarandeOrderNummer() {
        String nuvarandeOrderNummer = lblVarOrderNummer.getText();

        return nuvarandeOrderNummer;
    }

    /*public void fillFargCmb() {
        String query = "SELECT farg FROM farg";
        ArrayList<String> fargLista = SqlFragor.getEnKolumn(query);
        for (String farg : fargLista) {
            CBoxSpecialartikelFarg.addItem(farg);
        }
    }*/
    public void fillDekList() {

        dekList.setSelectionModel(new DefaultListSelectionModel() {
            public void setSelectionInterval(int index0, int index1) {
                if (isSelectedIndex(index0)) {
                    super.removeSelectionInterval(index0, index1);
                } else {
                    super.addSelectionInterval(index0, index1);
                }
            }
        });
        String query = "SELECT Dekoration FROM dekorationer";
        ArrayList<String> dekLista = SqlFragor.getEnKolumn(query);
        DefaultListModel model = new DefaultListModel();
        for (String dek : dekLista) {
            model.addElement(dek);

            dekList.setModel(model);
        }

    }

    public void fillStandardHattCmb() {

        String query = "SELECT HattID FROM standardhatt";
        ArrayList<String> hattIdLista = SqlFragor.getEnKolumn(query);
        for (String hatt : hattIdLista) {
            String beskrivningQuery = "SELECT beskrivning from Hatt inner join StandardHatt SH on Hatt.HattID = SH.HattID where SH.HattID = '" + hatt + "'";
            String hattBes = SqlFragor.getEttVarde(beskrivningQuery);
            standardHattCmb.addItem(hattBes);
        }
    }

    public void fillGenreCmb() {
        genreCmb.removeAllItems();
        genreCmb.addItem("");
        genreCmb.addItem("Skapa ny");
        String query = "SELECT Genre FROM genre";
        ArrayList<String> genreLista = SqlFragor.getEnKolumn(query);
        for (String genre : genreLista) {
            genreCmb.addItem(genre);

        }
    }

    public void fillTygCmb() {
        tygCmb.removeAllItems();
        tygCmb.addItem("");
        tygCmb.addItem("Skapa nytt");
        String query = "SELECT tyg FROM tyg";
        ArrayList<String> tygLista = SqlFragor.getEnKolumn(query);
        for (String tyg : tygLista) {
            tygCmb.addItem(tyg);
        }
    }

    //Skapar "nästa" ordernummer (BestID) baserat på det högsta ID:t som finns i databasen.
    private void skapaOrderNummer() {
        int ordernummer = taFramMaxBestId() + 1;
        String order = Integer.toString(ordernummer);
        lblVarOrderNummer.setText(order);
    }

    //Skapar "nästa" KundID baserat på det högsta ID:t som finns i databasen.
    private int skapaKundnummer() {
        int kundNummer = taFramMaxKundId() + 1;
        String kundNr = Integer.toString(kundNummer);

        return kundNummer;
    }

    //Skapar "nästa" HattID baserat på det högsta värdet som finns i databasen.
    private int skapaHattId() {
        int hattId = taFramMaxHattId() + 1;
        String kundNr = Integer.toString(hattId);

        return hattId;
    }
    // Hämtar det högsta HattID:t som finns i databasen

    public int taFramMaxHattId() {
        int maxId = Integer.parseInt(SqlFragor.getEttVarde("SELECT MAX(HattID) FROM hatt"));
        return maxId;
    }

    //Hämtar och returnerar högsta BestID som finns i databasen
    public int taFramMaxBestId() {
        int maxId = Integer.parseInt(SqlFragor.getEttVarde("SELECT MAX(BestID) FROM Bestallning"));
        return maxId;
    }

    //Hämtar och returnerar högsta KundID som finns i databasen
    public int taFramMaxKundId() {
        int maxId = Integer.parseInt(SqlFragor.getEttVarde("SELECT MAX(KundID) FROM Kund"));
        return maxId;
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLaggTillHatt;
    private javax.swing.JButton btnLaggTillKund;
    private javax.swing.JButton btnLaggTillSpHatt;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JButton btnValjFarg;
    private javax.swing.JComboBox<String> cmbValjKund;
    private javax.swing.JList<String> dekList;
    private javax.swing.JComboBox<String> genreCmb;
    private javax.swing.JTable hattTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JCheckBox kundCheckbox;
    private javax.swing.JTable kundTbl;
    private javax.swing.JLabel lBild;
    private javax.swing.JLabel lblAdress;
    private javax.swing.JLabel lblArtikelnummer;
    private javax.swing.JLabel lblEfternamn;
    private javax.swing.JLabel lblFarg;
    private javax.swing.JLabel lblFornamn;
    private javax.swing.JLabel lblLagerartikel;
    private javax.swing.JLabel lblNyKund;
    private javax.swing.JLabel lblNyOrder;
    private javax.swing.JLabel lblOrdernummer;
    private javax.swing.JLabel lblSpecialartikel;
    private javax.swing.JLabel lblSpecialartikelFarg;
    private javax.swing.JLabel lblSpecialartikelTyg;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblVarOrderNummer;
    private javax.swing.JButton orderBtn;
    private javax.swing.JPanel pnlColorSample;
    private javax.swing.JComboBox<String> standardHattCmb;
    private javax.swing.JCheckBox tullCheckbox;
    private javax.swing.JLabel tullLabel;
    private javax.swing.JTextField tullTextbox;
    private javax.swing.JTextField txtSpecialBenamning;
    private javax.swing.JTextField txtStorlek;
    private javax.swing.JTextField txtangivetAdress;
    private javax.swing.JTextField txtangivetEfternamn;
    private javax.swing.JTextField txtangivetFornamn;
    private javax.swing.JTextField txtangivetTelefonnummer;
    private javax.swing.JComboBox<String> tygCmb;
    // End of variables declaration//GEN-END:variables
}
